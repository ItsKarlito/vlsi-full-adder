_outputList = nil
 _envSaveOptions = nil
savedComponent = (let
(tmp1 tmp2 tmp3 tmp4 tmp5)
(unless tmp1
tmp1 = make_sevOutputStruct()
)
(unless tmp1
tmp1 = (ncons nil)
)
tmp1->inLastSet = nil
tmp1->name = nil
tmp1->expression = nil
tmp1->signal = "/net5"
tmp1->type = 'net
tmp1->selectionDetail = (let
(tmp1)
tmp1 = (let
(tmp1 tmp2)
tmp1 = 'color
tmp2 = (let
(tmp1 tmp2)
tmp1 = "y2"
tmp2 = "drawing"
list(tmp1 tmp2)
)
list(tmp1 tmp2)
)
list(tmp1)
)
tmp1->value = nil
tmp1->plot = 't
tmp1->save = nil
tmp1->march = nil
tmp1->index = 1
(unless tmp2
tmp2 = make_sevOutputStruct()
)
(unless tmp2
tmp2 = (ncons nil)
)
tmp2->inLastSet = nil
tmp2->name = nil
tmp2->expression = nil
tmp2->signal = "/net7"
tmp2->type = 'net
tmp2->selectionDetail = (let
(tmp1)
tmp1 = (let
(tmp1 tmp2)
tmp1 = 'color
tmp2 = (let
(tmp1 tmp2)
tmp1 = "y3"
tmp2 = "drawing"
list(tmp1 tmp2)
)
list(tmp1 tmp2)
)
list(tmp1)
)
tmp2->value = nil
tmp2->plot = 't
tmp2->save = nil
tmp2->march = nil
tmp2->index = 2
(unless tmp3
tmp3 = make_sevOutputStruct()
)
(unless tmp3
tmp3 = (ncons nil)
)
tmp3->inLastSet = nil
tmp3->name = nil
tmp3->expression = nil
tmp3->signal = "/net9"
tmp3->type = 'net
tmp3->selectionDetail = (let
(tmp1)
tmp1 = (let
(tmp1 tmp2)
tmp1 = 'color
tmp2 = (let
(tmp1 tmp2)
tmp1 = "y4"
tmp2 = "drawing"
list(tmp1 tmp2)
)
list(tmp1 tmp2)
)
list(tmp1)
)
tmp3->value = nil
tmp3->plot = 't
tmp3->save = nil
tmp3->march = nil
tmp3->index = 3
(unless tmp4
tmp4 = make_sevOutputStruct()
)
(unless tmp4
tmp4 = (ncons nil)
)
tmp4->inLastSet = nil
tmp4->name = nil
tmp4->expression = nil
tmp4->signal = "/SUM"
tmp4->type = 'net
tmp4->selectionDetail = (let
(tmp1)
tmp1 = (let
(tmp1 tmp2)
tmp1 = 'color
tmp2 = (let
(tmp1 tmp2)
tmp1 = "y5"
tmp2 = "drawing"
list(tmp1 tmp2)
)
list(tmp1 tmp2)
)
list(tmp1)
)
tmp4->value = nil
tmp4->plot = 't
tmp4->save = nil
tmp4->march = nil
tmp4->index = 4
(unless tmp5
tmp5 = make_sevOutputStruct()
)
(unless tmp5
tmp5 = (ncons nil)
)
tmp5->inLastSet = nil
tmp5->name = nil
tmp5->expression = nil
tmp5->signal = "/COUT"
tmp5->type = 'net
tmp5->selectionDetail = (let
(tmp1)
tmp1 = (let
(tmp1 tmp2)
tmp1 = 'color
tmp2 = (let
(tmp1 tmp2)
tmp1 = "y6"
tmp2 = "drawing"
list(tmp1 tmp2)
)
list(tmp1 tmp2)
)
list(tmp1)
)
tmp5->value = nil
tmp5->plot = 't
tmp5->save = nil
tmp5->march = nil
tmp5->index = 5
list(tmp1 tmp2 tmp3 tmp4 tmp5)
)
_outputList = nconc( _outputList savedComponent) 
_envSaveOptions = (let
(tmp1 tmp2)
tmp1 = (let
(tmp1 tmp2)
tmp1 = 'allAnalogTC
list(tmp1 tmp2)
)
tmp2 = (let
(tmp1 tmp2)
tmp1 = 'allAnalogNV
tmp2 = 't
list(tmp1 tmp2)
)
list(tmp1 tmp2)
)
savedComponent = list( _outputList _envSaveOptions ) 
_outputList = 'unbound
 _envSaveOptions = 'unbound
